#!/usr/bin/env zsh

export PATH="$HOME/.toolbox/bin:$PATH"

function midway_expiration_raw() {
    local midway_header="HttpOnly_midway-auth.amazon.com"
    local midway_cookie="$HOME/.midway/cookie"
    grep $midway_header $midway_cookie | cut -d $'\t' -f 5
}
function midway_expiration_date() {
    midway_expiration_raw | date
}

function midway_expired() {
    [ $(midway_expiration_raw) -lt $(date +%s) ]
}

function tunnel() {
    echo "Opening SSH tunnel..."
    ssh -L 2022:localhost:2022 -f -NT \
        "-o ServerAliveInterval=5" \
        "-o ServerAliveCountMax=6" \
        "-o ConnectTimeout=30" \
        "-o ExitOnForwardFailure=yes" \
        cloud \
    && echo "Tunnel open!" || echo "Failed to open tunnel!"
}

alias sam="brazil-build-tool-exec sam"

# Silent CDK noisy logs
export JSII_DEPRECATED="quiet"
export AWS_EC2_METADATA_DISABLED=false

# Ensure correct git email
export GIT_AUTHOR_EMAIL="enlovson@amazon.com"

# brazil ws show
export BRAZIL_WORKSPACE_DEFAULT_LAYOUT=short

# Used as `cmd whatever args 2>&1 | brazil_output_cleaner`
function brazil_output_cleaner() {
    cat
    2>&1 | grep --line-buffered --color=always  -v "....-..-.. ..:..:.. INFO Caching" \
    2>&1 | grep --line-buffered --color=always  -v "\s*\[echo\]\s*Replacing.*dependency" \
    2>&1 | grep --line-buffered --color=always  -v "\s*\[echo\]\s*Removing.*dependency" \
    2>&1 | grep --line-buffered --color=always  -v "\s*\[copy\]\s*Copying" \
    2>&1 | grep --line-buffered --color=always  -v "\s*\[echo\]\s*Copying" \
    2>&1 | grep --line-buffered --color=always  -v "\s*\[delete\]\s" \
    2>&1 | grep --line-buffered --color=always  -v "\s*\[mkdir\]\s" \
    2>&1 | grep --line-buffered --color=always  -v "WARNING: Duplicate key" \
    2>&1 | grep --line-buffered --color=always  -v "^$"
}

# brazil aliases
function bb() {NPM_CONFIG_COLOR=always brazil-build "$@" 2>&1 | brazil_output_cleaner; return $pipestatus[1];}
function bba() {brazil-build apollo-pkg "$@" 2>&1 | brazil_output_cleaner; return $pipestatus[1];}
function bre() {brazil-runtime-exec "$@" 2>&1 | brazil_output_cleaner; return $pipestatus[1];}
function bws() {brazil ws "$@" 2>&1 | brazil_output_cleaner; return $pipestatus[1];}
function bwsuse() {bws use --gitMode -p "$@" 2>&1 | brazil_output_cleaner; return $pipestatus[1];}
function bwscreate() {bws create -n "$@" 2>&1 | brazil_output_cleaner; return $pipestatus[1];}
function brc() {brazil-recursive-cmd "$@" 2>&1 | brazil_output_cleaner; return $pipestatus[1];}
function bbr() {brc brazil-build "$@" 2>&1 | brazil_output_cleaner; return $pipestatus[1];}
function bblist {
    printf -v brc_cmd 'echo $(basename %s)' '$sourcePath'
    brazil-recursive-cmd --allPackages "$brc_cmd"
}
function bball {
    local row1=$(printf "%*s\n" "${COLUMNS:-$(tput cols)}" '' | tr ' ' =)
    local row2=$(printf "%*s\n" "${COLUMNS:-$(tput cols)}" '' | tr ' ' -)
    local cmd_list=(
        'cd "%s"'
        '&& echo'
        '&& echo "$(tput setaf 117)$(tput bold)'$row1'"'
        '&& echo "$(basename $PWD) (RECURSIVE CMD \"%s\")"'
        '&& echo "'$row2'$(tput sgr0)"'
        '&& (NPM_CONFIG_COLOR=always %s)'
    )
    local cmds=`echo "$cmd_list"`
    local brc_cmd;
    printf -v brc_cmd "$cmds" '$sourcePath' "$*" "$*"
    brazil-recursive-cmd --allPackages "$brc_cmd" 2>&1 | brazil_output_cleaner 
}                    
function bbb() {brc --all Packages brazil-build "$@" 2>&1 | brazil_output_cleaner;}
function bbra() {bbr apollo-pkg "$@" 2>&1 | brazil_output_cleaner;}

function cdb() {
    local THERE=$PWD
    local PKG_INFO_FILE='packageInfo'

    while [ "$THERE" != "/" ]; do
        [[ -e $THERE/$PKG_INFO_FILE ]] && { break; }
        THERE=$(dirname $THERE)
    done
    [[ -e $THERE/$PKG_INFO_FILE ]] && { echo $THERE; cd $THERE; }
}

# ANT configuration to enable color logging (even in pipes)
ant_color_file="${HOME}/.config/ant/AnsiColorLogger"
mkdir -p $(dirname $ant_color_file)
cat << ANT_COLORS >! $ant_color_file
AnsiColorLogger.ERROR_COLOR=1;31
AnsiColorLogger.WARNING_COLOR=1;33
AnsiColorLogger.INFO_COLOR=0;34
AnsiColorLogger.VERBOSE_COLOR=2;32
AnsiColorLogger.DEBUG_COLOR=0;35
ANT_COLORS
export ANT_ARGS='-logger org.apache.tools.ant.listener.AnsiColorLogger'
export ANT_OPTS="-Dant.logger.defaults=$ant_color_file"


# Something with kerberos; I don't remember what
# Something to either pass it through and/or keep a static name
export KRB5CCNAME=FILE:/tmp/krb5cc_`id -ru`
if [[ $KRB5CCNAME == FILE:*_*_* ]]
then
    krb5target=${KRB5CCNAME#FILE:}
    krb5link=${krb5target%_*}
    if ! ( -L $krb5link && -f $(readlink $krb5link) )
    then
        rm -f $krb5link
        ln -s $krb5target $krb5link
    fi
    KRB5CCNAME=FILE:$krb5link
    unset krb5target krb5link
fi
